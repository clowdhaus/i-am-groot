name: container-deploy

on:
  push:
    branches:
      - main
    paths:
      - 'container/**'
    tags:
      - 'rc-*'
      - 'v*'

defaults:
  run:
    working-directory: container

jobs:
  deploy:
    name: Deploy image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 3

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          echo "IMAGE=${{ steps.ecr.outputs.registry }}/groot" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_REF=$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)" >> $GITHUB_ENV
          echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        # run when change pushed to main
        if: github.ref == 'refs/heads/main'
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Cache Docker layers
        # run when change pushed to main
        if: github.ref == 'refs/heads/main'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push image
        # run when change pushed to main - build once
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
            org.opencontainers.image.ref.name=${{ env.GIT_REF }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          tags: |
            ${{ env.IMAGE }}:${{ env.GIT_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: container
          push: false
          load: true
          platforms: linux/amd64

      - name: Move cache
        # run when change pushed to main - build once
        if: github.ref == 'refs/heads/main'
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Deploy to stage
        # run when change pushed to main
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ env.IMAGE }}:${{ env.GIT_SHA }}

      - name: Deploy to demo
        # run when release tag pushed
        if: startsWith(github.ref, 'refs/tags/rc-v')
        run: |
          docker pull ${{ env.IMAGE }}:${{ env.GIT_SHA }}
          docker tag ${{ env.IMAGE }}:${{ env.GIT_SHA }} ${{ env.IMAGE }}:${{ env.GIT_TAG }}
          docker push ${{ env.IMAGE }}:${{ env.GIT_TAG }}

      - name: Deploy to prod
        # run when release tag pushed
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker pull ${{ env.IMAGE }}:${{ env.GIT_SHA }}
          docker tag ${{ env.IMAGE }}:${{ env.GIT_SHA }} ${{ env.IMAGE }}:${{ env.GIT_TAG }}
          docker push ${{ env.IMAGE }}:${{ env.GIT_TAG }}
